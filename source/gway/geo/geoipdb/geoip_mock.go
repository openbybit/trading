// Code generated by MockGen. DO NOT EDIT.
// Source: geoip.go

// Package geoipdb is a generated GoMock package.
package geoipdb

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGeoIP is a mock of GeoIP interface.
type MockGeoIP struct {
	ctrl     *gomock.Controller
	recorder *MockGeoIPMockRecorder
}

// MockGeoIPMockRecorder is the mock recorder for MockGeoIP.
type MockGeoIPMockRecorder struct {
	mock *MockGeoIP
}

// NewMockGeoIP creates a new mock instance.
func NewMockGeoIP(ctrl *gomock.Controller) *MockGeoIP {
	mock := &MockGeoIP{ctrl: ctrl}
	mock.recorder = &MockGeoIPMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeoIP) EXPECT() *MockGeoIPMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockGeoIP) Close(file string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close", file)
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockGeoIPMockRecorder) Close(file interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockGeoIP)(nil).Close), file)
}

// CloseAll mocks base method.
func (m *MockGeoIP) CloseAll() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseAll")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseAll indicates an expected call of CloseAll.
func (mr *MockGeoIPMockRecorder) CloseAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseAll", reflect.TypeOf((*MockGeoIP)(nil).CloseAll))
}

// GetCityInfo mocks base method.
func (m *MockGeoIP) GetCityInfo(ip string) (City, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCityInfo", ip)
	ret0, _ := ret[0].(City)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCityInfo indicates an expected call of GetCityInfo.
func (mr *MockGeoIPMockRecorder) GetCityInfo(ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCityInfo", reflect.TypeOf((*MockGeoIP)(nil).GetCityInfo), ip)
}

// GetCountryInfo mocks base method.
func (m *MockGeoIP) GetCountryInfo(ip string) (Country, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCountryInfo", ip)
	ret0, _ := ret[0].(Country)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCountryInfo indicates an expected call of GetCountryInfo.
func (mr *MockGeoIPMockRecorder) GetCountryInfo(ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCountryInfo", reflect.TypeOf((*MockGeoIP)(nil).GetCountryInfo), ip)
}
