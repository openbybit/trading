// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/sh00465ml/go/pkg/mod/code.bydev.io/fbu/gateway/gway.git/gsmp@v0.0.0-20230328062353-aff05f17894d/grouper.go

// Package mock_gsmp is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGrouper is a mock of Grouper interface.
type MockGrouper struct {
	ctrl     *gomock.Controller
	recorder *MockGrouperMockRecorder
}

// MockGrouperMockRecorder is the mock recorder for MockGrouper.
type MockGrouperMockRecorder struct {
	mock *MockGrouper
}

// NewMockGrouper creates a new mock instance.
func NewMockGrouper(ctrl *gomock.Controller) *MockGrouper {
	mock := &MockGrouper{ctrl: ctrl}
	mock.recorder = &MockGrouperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGrouper) EXPECT() *MockGrouperMockRecorder {
	return m.recorder
}

// GetGroup mocks base method.
func (m *MockGrouper) GetGroup(ctx context.Context, uid int64) (int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroup", ctx, uid)
	ret0, _ := ret[0].(int32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroup indicates an expected call of GetGroup.
func (mr *MockGrouperMockRecorder) GetGroup(ctx, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroup", reflect.TypeOf((*MockGrouper)(nil).GetGroup), ctx, uid)
}

// HandleMsg mocks base method.
func (m *MockGrouper) HandleMsg(msg []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleMsg", msg)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleMsg indicates an expected call of HandleMsg.
func (mr *MockGrouperMockRecorder) HandleMsg(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleMsg", reflect.TypeOf((*MockGrouper)(nil).HandleMsg), msg)
}

// Init mocks base method.
func (m *MockGrouper) Init(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Init", ctx)
}

// Init indicates an expected call of Init.
func (mr *MockGrouperMockRecorder) Init(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockGrouper)(nil).Init), ctx)
}
