// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/service/user/copy_trade.go

// Package mock is a generated GoMock package.
package mock

import (
	user "bgw/pkg/service/user"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCopyTradeIface is a mock of CopyTradeIface interface.
type MockCopyTradeIface struct {
	ctrl     *gomock.Controller
	recorder *MockCopyTradeIfaceMockRecorder
}

// MockCopyTradeIfaceMockRecorder is the mock recorder for MockCopyTradeIface.
type MockCopyTradeIfaceMockRecorder struct {
	mock *MockCopyTradeIface
}

// NewMockCopyTradeIface creates a new mock instance.
func NewMockCopyTradeIface(ctrl *gomock.Controller) *MockCopyTradeIface {
	mock := &MockCopyTradeIface{ctrl: ctrl}
	mock.recorder = &MockCopyTradeIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCopyTradeIface) EXPECT() *MockCopyTradeIfaceMockRecorder {
	return m.recorder
}

// DeleteCopyTradeData mocks base method.
func (m *MockCopyTradeIface) DeleteCopyTradeData(uid int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteCopyTradeData", uid)
}

// DeleteCopyTradeData indicates an expected call of DeleteCopyTradeData.
func (mr *MockCopyTradeIfaceMockRecorder) DeleteCopyTradeData(uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCopyTradeData", reflect.TypeOf((*MockCopyTradeIface)(nil).DeleteCopyTradeData), uid)
}

// GetCopyTradeData mocks base method.
func (m *MockCopyTradeIface) GetCopyTradeData(ctx context.Context, uid int64) (*user.CopyTrade, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCopyTradeData", ctx, uid)
	ret0, _ := ret[0].(*user.CopyTrade)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCopyTradeData indicates an expected call of GetCopyTradeData.
func (mr *MockCopyTradeIfaceMockRecorder) GetCopyTradeData(ctx, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCopyTradeData", reflect.TypeOf((*MockCopyTradeIface)(nil).GetCopyTradeData), ctx, uid)
}
