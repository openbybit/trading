// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/service/openapi/openapi.go

// Package mock_openapi is a generated GoMock package.
package mock

import (
	openapi "bgw/pkg/service/openapi"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOpenAPIServiceIface is a mock of OpenAPIServiceIface interface.
type MockOpenAPIServiceIface struct {
	ctrl     *gomock.Controller
	recorder *MockOpenAPIServiceIfaceMockRecorder
}

// MockOpenAPIServiceIfaceMockRecorder is the mock recorder for MockOpenAPIServiceIface.
type MockOpenAPIServiceIfaceMockRecorder struct {
	mock *MockOpenAPIServiceIface
}

// NewMockOpenAPIServiceIface creates a new mock instance.
func NewMockOpenAPIServiceIface(ctrl *gomock.Controller) *MockOpenAPIServiceIface {
	mock := &MockOpenAPIServiceIface{ctrl: ctrl}
	mock.recorder = &MockOpenAPIServiceIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpenAPIServiceIface) EXPECT() *MockOpenAPIServiceIfaceMockRecorder {
	return m.recorder
}

// GetAPIKey mocks base method.
func (m *MockOpenAPIServiceIface) GetAPIKey(ctx context.Context, apiKey, xOriginFrom string) (*openapi.MemberLogin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKey", ctx, apiKey, xOriginFrom)
	ret0, _ := ret[0].(*openapi.MemberLogin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIKey indicates an expected call of GetAPIKey.
func (mr *MockOpenAPIServiceIfaceMockRecorder) GetAPIKey(ctx, apiKey, xOriginFrom interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKey", reflect.TypeOf((*MockOpenAPIServiceIface)(nil).GetAPIKey), ctx, apiKey, xOriginFrom)
}

// VerifyAPIKey mocks base method.
func (m *MockOpenAPIServiceIface) VerifyAPIKey(ctx context.Context, apikey, xOriginFrom string) (*openapi.MemberLogin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyAPIKey", ctx, apikey, xOriginFrom)
	ret0, _ := ret[0].(*openapi.MemberLogin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyAPIKey indicates an expected call of VerifyAPIKey.
func (mr *MockOpenAPIServiceIfaceMockRecorder) VerifyAPIKey(ctx, apikey, xOriginFrom interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyAPIKey", reflect.TypeOf((*MockOpenAPIServiceIface)(nil).VerifyAPIKey), ctx, apikey, xOriginFrom)
}
