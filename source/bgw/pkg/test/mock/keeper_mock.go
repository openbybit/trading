// Code generated by MockGen. DO NOT EDIT.
// Source: keeper.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockkeyKeeper is a mock of keyKeeper interface.
type MockkeyKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockkeyKeeperMockRecorder
}

// MockkeyKeeperMockRecorder is the mock recorder for MockkeyKeeper.
type MockkeyKeeperMockRecorder struct {
	mock *MockkeyKeeper
}

// NewMockkeyKeeper creates a new mock instance.
func NewMockkeyKeeper(ctrl *gomock.Controller) *MockkeyKeeper {
	mock := &MockkeyKeeper{ctrl: ctrl}
	mock.recorder = &MockkeyKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockkeyKeeper) EXPECT() *MockkeyKeeperMockRecorder {
	return m.recorder
}

// BuildListen mocks base method.
func (m *MockkeyKeeper) BuildListen(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildListen", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// BuildListen indicates an expected call of BuildListen.
func (mr *MockkeyKeeperMockRecorder) BuildListen(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildListen", reflect.TypeOf((*MockkeyKeeper)(nil).BuildListen), ctx)
}

// GetAppName mocks base method.
func (m *MockkeyKeeper) GetAppName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAppName indicates an expected call of GetAppName.
func (mr *MockkeyKeeperMockRecorder) GetAppName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppName", reflect.TypeOf((*MockkeyKeeper)(nil).GetAppName))
}

// GetSignKey mocks base method.
func (m *MockkeyKeeper) GetSignKey(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSignKey", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSignKey indicates an expected call of GetSignKey.
func (mr *MockkeyKeeperMockRecorder) GetSignKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSignKey", reflect.TypeOf((*MockkeyKeeper)(nil).GetSignKey), arg0, arg1)
}
